version: "3"
services:

  todo-server:
    image: todo-server
    build:
      context: ./todo-server
      dockerfile: Dockerfile-dev
    env_file: "./todo-server/.env"
    container_name: todo-server
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DB_URL=${DB_URL}
      - TEST_DB_URL=${TEST_DB_URL}
      - AUTH_SERVER_URL=${AUTH_SERVER_URL}
    volumes:
      - ./todo-server:/app # Mount the host code directory into the container
    depends_on:
      - auth-server
      
  auth-server:
    image: auth-server
    build:
      context: ./auth-server
      dockerfile: Dockerfile-dev
    env_file: "./auth-server/.env"
    container_name: auth-server
    ports:
      - "8080:8080"
    volumes:
      - ./auth-server:/app # Mount the host code directory into the container
    environment:
      - NODE_ENV=development
      - DB_URL=${DB_URL}
      - TEST_DB_URL=${TEST_DB_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_MINUTES=${REFRESH_TOKEN_EXPIRE_MINUTES}

  nextjs-client:
    image: nextjs-client
    build:
      context: ./nextjs-client
      dockerfile: Dockerfile-dev
    env_file: "./nextjs-client/.env"
    container_name: nextjs-client
    ports:
      - "3000:3000"
    volumes:
      - ./nextjs-client:/app # Mount the host code directory into the container
    environment:
      - NODE_ENV=development
      - BACKEND_AUTH_SERVER_URL=${BACKEND_AUTH_SERVER_URL}
      - BACKEND_TODO_SERVER_URL=${BACKEND_TODO_SERVER_URL}
    depends_on:
      - todo-server
      - auth-server

