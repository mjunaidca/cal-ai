"""migrate tables to sqlmodel

Revision ID: c47711abbdfd
Revises: 57a55728e090
Create Date: 2024-03-15 13:03:34.752924

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c47711abbdfd'
down_revision: Union[str, None] = '57a55728e090'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_hashed_password'), 'user', ['hashed_password'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('todo',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_todo_id'), 'todo', ['id'], unique=False)
    op.create_index(op.f('ix_todo_title'), 'todo', ['title'], unique=False)
    op.drop_index('ix_todos_table_id', table_name='todos_table')
    op.drop_index('ix_todos_table_title', table_name='todos_table')
    op.drop_table('todos_table')
    op.drop_index('ix_users_table_email', table_name='users_table')
    op.drop_index('ix_users_table_hashed_password', table_name='users_table')
    op.drop_index('ix_users_table_id', table_name='users_table')
    op.drop_index('ix_users_table_username', table_name='users_table')
    op.drop_table('users_table')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_table',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_table_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_table_username', 'users_table', ['username'], unique=True)
    op.create_index('ix_users_table_id', 'users_table', ['id'], unique=False)
    op.create_index('ix_users_table_hashed_password', 'users_table', ['hashed_password'], unique=False)
    op.create_index('ix_users_table_email', 'users_table', ['email'], unique=True)
    op.create_table('todos_table',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users_table.id'], name='todos_table_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='todos_table_pkey')
    )
    op.create_index('ix_todos_table_title', 'todos_table', ['title'], unique=False)
    op.create_index('ix_todos_table_id', 'todos_table', ['id'], unique=False)
    op.drop_index(op.f('ix_todo_title'), table_name='todo')
    op.drop_index(op.f('ix_todo_id'), table_name='todo')
    op.drop_table('todo')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_hashed_password'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
